import React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import ErrorPage from "next/error";
import PostBody from "../../components/PostBoddy";
import { getAllPostsWithSlug, getPostAndMorePosts } from "../../lib/api";
import Navbar from "../../components/Navbar";
import Footer from "../../components/Footer";
import Image from "next/image";

type Props = {
  post: any;
};

const Post = ({ post }: Props) => {
  const router = useRouter();

  if (!router.isFallback && !post) {
    return <ErrorPage statusCode={404} />;
  }
  return (
    <>
      <Head>
        <title>Selene-Yoga</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="text-xs md:text-base font-main">
        <Navbar />
        <div className="relative h-32">
          <Image
            src={post?.coverImage?.url}
            alt={"Mountain sunset"}
            fill
            className="object-cover"
          />
          <div className="absolute inset-0 flex flex-col justify-center items-center center-content z-10">
            <div>
              <div className=" text-center text-white bold text-4xl font-serif">
                {post?.title}
              </div>
            </div>
          </div>
        </div>
        <p className="p-10 text-center">
          <PostBody content={post?.content} />
          <div className="flex flex-row-reverse m-2">
            <div className="flex flex-col content-center align-content justify-center">
              <div className=" text-gray-700 font-bold ">
                {post?.author?.name}
              </div>
            </div>
            <Image
              className="mx-4 w-10 h-10 object-cover rounded-full hidden sm:block"
              src={post?.author?.picture?.url}
              alt="avatar"
              width={100}
              height={100}
            />
          </div>
        </p>
        <Footer bgClassName="bg-gradient-to-t from-selene-green to-selene-green-dark" />
      </main>
    </>
  );
};

export default Post;
type staticProps = {
  params: any;
  preview: boolean;
};

export async function getStaticProps({ params, preview = false }: staticProps) {
  const data = await getPostAndMorePosts(params.slug, preview);

  return {
    props: {
      preview,
      post: data?.post ?? null,
      morePosts: data?.morePosts ?? null,
    },
    revalidate: 1,
  };
}

type slugProps = {
  slug: any;
};

export async function getStaticPaths() {
  const allPosts = await getAllPostsWithSlug();
  return {
    paths: allPosts?.map(({ slug }: slugProps) => `/posts/${slug}`) ?? [],
    fallback: true,
  };
}
